{
  "contributors": [
    {
      "name": "Thom Seddon",
      "email": "thom@seddonmedia.co.uk"
    },
    {
      "name": "Lars F. KarlstrÃ¶m",
      "email": "lars@lfk.io"
    },
    {
      "name": "Rui Marinho",
      "email": "ruipmarinho@gmail.com"
    },
    {
      "name": "Tiago Ribeiro",
      "email": "tiago.ribeiro@gmail.com"
    },
    {
      "name": "Michael Salinger",
      "email": "mjsalinger@gmail.com"
    },
    {
      "name": "Nuno Sousa"
    },
    {
      "name": "Max Truxa"
    }
  ],
  "dependencies": {
    "basic-auth": "^1.0.0",
    "bluebird": "^2.9.13",
    "camel-case": "^1.1.1",
    "lodash": "^3.3.1",
    "promisify-any": "2.0.1",
    "standard-http-error": "^1.1.0",
    "type-is": "^1.6.0",
    "validator.js": "^1.1.1"
  },
  "description": "Complete, framework-agnostic, compliant and well tested module for implementing an OAuth2 Server in node.js",
  "devDependencies": {
    "jshint": "^2.9.1",
    "mocha": "^2.2.1",
    "should": "^5.0.1",
    "sinon": "^1.13.0"
  },
  "engines": {
    "node": ">=4.0"
  },
  "license": "MIT",
  "main": "index.js",
  "name": "oauth2-server",
  "optionalDependencies": {},
  "readme": "Complete, compliant and well tested module for implementing an OAuth2 server in [node.js](https://nodejs.org/).\n\n  [![NPM Version][npm-image]][npm-url]\n  [![Build Status][travis-image]][travis-url]\n  [![NPM Downloads][downloads-image]][downloads-url]\n\n# Quick Start\n\n  The _node-oauth2-server_ module is framework-agnostic but there are several wrappers available for popular frameworks such as [express](https://github.com/oauthjs/express-oauth-server) and [koa 2](https://github.com/oauthjs/koa-oauth-server).\n\n  Using the _express_ wrapper (_recommended_):\n\n```js\nvar express = require('express');\nvar oauthServer = require('express-oauth-server');\nvar app = express();\n\nvar oauth = new oauthServer({ model: model });\n\napp.use(oauth.authenticate());\n\napp.get('/', function (req, res) {\n  res.send('Hello World');\n})\n\napp.listen(3000);\n```\n\n  Using this module directly (_for custom servers only_):\n\n```js\nvar Request = require('oauth2-server').Request;\nvar oauthServer = require('oauth2-server');\n\nvar oauth = new oauthServer({ model: model });\n\nvar request = new Request({\n  headers: { authorization: 'Bearer foobar' }\n});\n\noauth.authenticate(request)\n  .then(function(data) {\n    // Request is authorized.\n  })\n  .catch(function(e) {\n    // Request is not authorized.\n  });\n```\n\n  _Note: see the documentation for the [specification][wiki-model-specification] of what's required from the model._\n\n# Features\n\n  - Supports `authorization_code` (with scopes), `client_credentials`, `password`, `refresh_token` and custom `extension` grant types.\n  - Can be used with _node-style_ callbacks, promises and ES6 _async_/_await_.\n  - Fully [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) compliant.\n  - Implicitly supports any form of storage e.g. _PostgreSQL_, _MySQL_, _Mongo_, _Redis_, _etc_.\n  - Full test suite.\n\n# Documentation\n\n  - [Server options][wiki-server-options]\n  - [Model specification][wiki-model-specification]\n    - [Authorization Code][wiki-model-specification]\n    - [Client Credentials][wiki-model-specification]\n    - [Password][wiki-model-specification]\n    - [Refresh token][wiki-model-specification]\n    - [Custom extension][wiki-model-specification]\n\n# Examples\n\n  Most users should refer to our [express](https://github.com/seegno/express-oauth-server/tree/master/examples) or [koa](https://github.com/thomseddon/koa-oauth-server/tree/master/examples) examples. If you're implementing a custom server, we have many examples available:\n\n  - A simple **password** grant authorization [example](examples/password).\n  - A more complex **password** and **refresh_token** [example](examples/refresh-token).\n  - An advanced **password**, **refresh_token** and **authorization_code** (with scopes) [example](examples/authorization-code).\n\n# Upgrading from 2.x\n\n  This module has been rewritten with a promise-based approach and introduced a few changes in the model specification.\n\n  Please refer to our [3.0 migration guide][wiki-migrating-from-2x-to-3x] for more information.\n\n## License\n\n  [MIT](LICENSE)\n\n<!--- badge links -->\n[npm-image]: https://img.shields.io/npm/v/oauth2-server.svg\n[npm-url]: https://npmjs.org/package/oauth2-server\n[travis-image]: https://img.shields.io/travis/oauthjs/node-oauth2-server/master.svg\n[travis-url]: https://travis-ci.org/oauthjs/node-oauth2-server\n[downloads-image]: https://img.shields.io/npm/dm/oauth2-server.svg\n[downloads-url]: https://npmjs.org/package/oauth2-server\n\n<!--- wiki links -->\n[wiki-model-specification]: https://github.com/oauthjs/node-oauth2-server/wiki/Model-specification\n[wiki-migrating-from-2x-to-3x]: https://github.com/oauthjs/node-oauth2-server/wiki/Migrating-from-2-x-to-3-x\n[wiki-server-options]: https://github.com/oauthjs/node-oauth2-server/wiki/Server-options\n",
  "readmeFilename": "README.md",
  "scripts": {
    "pretest": "jshint --config ./.jshintrc lib test",
    "test": "NODE_ENV=test ./node_modules/.bin/mocha 'test/**/*_test.js'"
  },
  "version": "3.0.0"
}
